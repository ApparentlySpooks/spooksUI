-- Spooks UI Library
local SpooksUI = {}

-- Services
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SpooksUI"
ScreenGui.Parent = playerGui

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 500, 0, 300)
MainFrame.Position = UDim2.new(0.5, -250, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui
MainFrame.Active = true
MainFrame.Draggable = true

-- Title Label
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Title.BorderSizePixel = 0
Title.Text = "Spooks UI"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 18
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Parent = MainFrame

-- Tabs Frame
local TabsFrame = Instance.new("Frame")
TabsFrame.Size = UDim2.new(0, 100, 1, -40) -- Occupy left side
TabsFrame.Position = UDim2.new(0, 0, 0, 40)
TabsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TabsFrame.BorderSizePixel = 0
TabsFrame.Parent = MainFrame

-- Layout for tabs
local TabsLayout = Instance.new("UIListLayout")
TabsLayout.Padding = UDim.new(0, 5)
TabsLayout.FillDirection = Enum.FillDirection.Vertical
TabsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
TabsLayout.SortOrder = Enum.SortOrder.LayoutOrder
TabsLayout.Parent = TabsFrame

-- Content Frame (Buttons, Toggles, etc.)
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, -120, 1, -50)
ContentFrame.Position = UDim2.new(0, 110, 0, 50)
ContentFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ContentFrame.BorderSizePixel = 0
ContentFrame.Parent = MainFrame

-- Internal state for tabs and current tab
local Tabs = {}
local CurrentTab = nil

-- Function to switch tabs
local function SwitchTab(tabName)
    for name, tab in pairs(Tabs) do
        if name == tabName then
            tab.Content.Visible = true
        else
            tab.Content.Visible = false
        end
    end
    CurrentTab = tabName
end

-- Create a new tab
function SpooksUI.CreateTab(tabName)
    -- Tab button
    local TabButton = Instance.new("TextButton")
    TabButton.Size = UDim2.new(1, -10, 0, 30)
    TabButton.Text = tabName
    TabButton.Font = Enum.Font.Gotham
    TabButton.TextSize = 14
    TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    TabButton.BorderSizePixel = 0
    TabButton.Parent = TabsFrame

    -- Tab content frame
    local TabContent = Instance.new("Frame")
    TabContent.Size = UDim2.new(1, 0, 1, 0)
    TabContent.Position = UDim2.new(0, 0, 0, 0)
    TabContent.BackgroundTransparency = 1
    TabContent.Visible = false
    TabContent.Parent = ContentFrame

    -- Layout for the tab's content
    local TabLayout = Instance.new("UIListLayout")
    TabLayout.Padding = UDim.new(0, 10)
    TabLayout.FillDirection = Enum.FillDirection.Vertical
    TabLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
    TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabLayout.Parent = TabContent

    -- Add tab to internal state
    Tabs[tabName] = { Button = TabButton, Content = TabContent }

    -- Connect button to switch tab
    TabButton.MouseButton1Click:Connect(function()
        SwitchTab(tabName)
    end)

    -- Automatically switch to the first tab
    SwitchTab(tabName)
end

-- Function to create a button in the current tab
function SpooksUI.CreateButton(name, callback)
    if not CurrentTab or not Tabs[CurrentTab] then
        warn("No active tab selected!")
        return
    end

    local Button = Instance.new("TextButton")
    Button.Name = name
    Button.Text = name
    Button.Font = Enum.Font.Gotham
    Button.TextSize = 16
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    Button.Size = UDim2.new(1, -20, 0, 40)
    Button.BorderSizePixel = 0
    Button.Parent = Tabs[CurrentTab].Content

    Button.MouseButton1Click:Connect(function()
        print(name .. " button clicked!")
        if callback then
            callback()
        end
    end)

    return Button
end

-- Function to create a toggle in the current tab
function SpooksUI.CreateToggle(name, callback)
    if not CurrentTab or not Tabs[CurrentTab] then
        warn("No active tab selected!")
        return
    end

    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Name = name
    ToggleFrame.Size = UDim2.new(1, -20, 0, 40)
    ToggleFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    ToggleFrame.BorderSizePixel = 0
    ToggleFrame.Parent = Tabs[CurrentTab].Content

    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Size = UDim2.new(0.8, 0, 1, 0)
    ToggleButton.Position = UDim2.new(0, 10, 0, 0)
    ToggleButton.Text = name
    ToggleButton.Font = Enum.Font.Gotham
    ToggleButton.TextSize = 16
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.BackgroundTransparency = 1
    ToggleButton.Parent = ToggleFrame

    local StatusCircle = Instance.new("Frame")
    StatusCircle.Size = UDim2.new(0, 20, 0, 20)
    StatusCircle.Position = UDim2.new(0.85, 0, 0.5, -10)
    StatusCircle.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    StatusCircle.BorderSizePixel = 0
    StatusCircle.AnchorPoint = Vector2.new(0.5, 0.5)
    StatusCircle.Parent = ToggleFrame

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(1, 0)
    UICorner.Parent = StatusCircle

    local isActive = false
    ToggleButton.MouseButton1Click:Connect(function()
        isActive = not isActive
        StatusCircle.BackgroundColor3 = isActive and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        print(name .. " toggled to " .. tostring(isActive))
        if callback then
            callback(isActive)
        end
    end)
end

return SpooksUI
